{
  "address": "0xC976c932092ECcD8f328FfD85066C0c05ED54044",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "_swapRouter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTier",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "swapWETHForDAI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x17d6caf98af58fc1c0e00f1c9bf14bbde6ddb54a86b2e7c0826dba86dcaba33a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xC976c932092ECcD8f328FfD85066C0c05ED54044",
    "transactionIndex": 0,
    "gasUsed": "670558",
    "logsBloom": "0x
    "blockHash": "0x7e67403525fdf40968f394a9582bd2cd626654ad5574ffe7987ddf8fb4c90a4d",
    "transactionHash": "0x17d6caf98af58fc1c0e00f1c9bf14bbde6ddb54a86b2e7c0826dba86dcaba33a",
    "logs": [],
    "blockNumber": 15836318,
    "cumulativeGasUsed": "670558",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xE592427A0AEce92De3Edee1F18E0157C05861564"
  ],
  "numDeployments": 1,
  "solcInputHash": "954428b01b3c53a7cf43a4f38b6a04dd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTier\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapWETHForDAI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapContract.sol\":\"SwapContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.6.0;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\nlibrary TransferHelper {\\n    /// @notice Transfers tokens from the targeted address to the given destination\\n    /// @notice Errors with 'STF' if transfer fails\\n    /// @param token The contract address of the token to be transferred\\n    /// @param from The originating address from which the tokens will be transferred\\n    /// @param to The destination address of the transfer\\n    /// @param value The amount to be transferred\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) =\\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\\n    }\\n\\n    /// @notice Transfers tokens from msg.sender to a recipient\\n    /// @dev Errors with ST if transfer fails\\n    /// @param token The contract address of the token which will be transferred\\n    /// @param to The recipient of the transfer\\n    /// @param value The value of the transfer\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\\n    }\\n\\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\\n    /// @dev Errors with 'SA' if transfer fails\\n    /// @param token The contract address of the token to be approved\\n    /// @param to The target of the approval\\n    /// @param value The amount of the given token the target will be allowed to spend\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\\n    }\\n\\n    /// @notice Transfers ETH to the recipient address\\n    /// @dev Fails with `STE`\\n    /// @param to The destination of the transfer\\n    /// @param value The value to be transferred\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, 'STE');\\n    }\\n}\\n\",\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\"},\"contracts/SwapContract.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\\n\\ncontract SwapContract {\\n    ISwapRouter public immutable swapRouter;\\n    address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\\n    address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\n    uint24 public constant feeTier = 3000;\\n\\n    constructor(ISwapRouter _swapRouter) {\\n        swapRouter = _swapRouter;\\n    }\\n\\n    function swapWETHForDAI(uint amountIn) external returns (uint256 amountOut) {\\n        // Transfer the specified amount of WETH9 to this contract.\\n        TransferHelper.safeTransferFrom(WETH9, msg.sender, address(this), amountIn);\\n        // Approve the router to spend WETH9.\\n        TransferHelper.safeApprove(WETH9, address(swapRouter), amountIn);\\n        // Create the params that will be used to execute the swap\\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\\n            tokenIn: WETH9,\\n            tokenOut: DAI,\\n            fee: feeTier,\\n            recipient: msg.sender,\\n            deadline: block.timestamp,\\n            amountIn: amountIn,\\n            amountOutMinimum: 0,\\n            sqrtPriceLimitX96: 0\\n        });\\n        // The call to `exactInputSingle` executes the swap.\\n        amountOut = swapRouter.exactInputSingle(params);\\n        return amountOut;\\n    }\\n}\\n\",\"keccak256\":\"0xfaf4546a541c1025f517e97d15de0ab71b80b400bfbb490348c1335b95622338\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610c57380380610c57833981810160405281019061003291906100e1565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505061010e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b60006100ae82610091565b9050919050565b6100be816100a3565b81146100c957600080fd5b50565b6000815190506100db816100b5565b92915050565b6000602082840312156100f7576100f661006c565b5b6000610105848285016100cc565b91505092915050565b608051610b20610137600039600081816101400152818161022e01526102f00152610b206000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632ed5016f1461005c5780634aa4a4fc1461008c57806372f5d98a146100aa578063c31c9c07146100c8578063e0bab4c4146100e6575b600080fd5b61007660048036038101906100719190610612565b610104565b604051610083919061064e565b60405180910390f35b6100946102d0565b6040516100a191906106aa565b60405180910390f35b6100b26102e8565b6040516100bf91906106e3565b60405180910390f35b6100d06102ee565b6040516100dd919061075d565b60405180910390f35b6100ee610312565b6040516100fb91906106aa565b60405180910390f35b600061012673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc233308561032a565b61016573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc27f000000000000000000000000000000000000000000000000000000000000000084610482565b600060405180610100016040528073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016102859190610856565b6020604051808303816000875af11580156102a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c89190610887565b915050919050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b610bb881565b7f000000000000000000000000000000000000000000000000000000000000000081565b736b175474e89094c44da98b954eedeac495271d0f81565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401610361939291906108b4565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516103cb919061095c565b6000604051808303816000865af19150503d8060008114610408576040519150601f19603f3d011682016040523d82523d6000602084013e61040d565b606091505b509150915081801561043b575060008151148061043a57508080602001905181019061043991906109ab565b5b5b61047a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047190610a35565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016104b7929190610a55565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610521919061095c565b6000604051808303816000865af19150503d806000811461055e576040519150601f19603f3d011682016040523d82523d6000602084013e610563565b606091505b5091509150818015610591575060008151148061059057508080602001905181019061058f91906109ab565b5b5b6105d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c790610aca565b60405180910390fd5b5050505050565b600080fd5b6000819050919050565b6105ef816105dc565b81146105fa57600080fd5b50565b60008135905061060c816105e6565b92915050565b600060208284031215610628576106276105d7565b5b6000610636848285016105fd565b91505092915050565b610648816105dc565b82525050565b6000602082019050610663600083018461063f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061069482610669565b9050919050565b6106a481610689565b82525050565b60006020820190506106bf600083018461069b565b92915050565b600062ffffff82169050919050565b6106dd816106c5565b82525050565b60006020820190506106f860008301846106d4565b92915050565b6000819050919050565b600061072361071e61071984610669565b6106fe565b610669565b9050919050565b600061073582610708565b9050919050565b60006107478261072a565b9050919050565b6107578161073c565b82525050565b6000602082019050610772600083018461074e565b92915050565b61078181610689565b82525050565b610790816106c5565b82525050565b61079f816105dc565b82525050565b6107ae81610669565b82525050565b610100820160008201516107cb6000850182610778565b5060208201516107de6020850182610778565b5060408201516107f16040850182610787565b5060608201516108046060850182610778565b5060808201516108176080850182610796565b5060a082015161082a60a0850182610796565b5060c082015161083d60c0850182610796565b5060e082015161085060e08501826107a5565b50505050565b60006101008201905061086c60008301846107b4565b92915050565b600081519050610881816105e6565b92915050565b60006020828403121561089d5761089c6105d7565b5b60006108ab84828501610872565b91505092915050565b60006060820190506108c9600083018661069b565b6108d6602083018561069b565b6108e3604083018461063f565b949350505050565b600081519050919050565b600081905092915050565b60005b8381101561091f578082015181840152602081019050610904565b60008484015250505050565b6000610936826108eb565b61094081856108f6565b9350610950818560208601610901565b80840191505092915050565b6000610968828461092b565b915081905092915050565b60008115159050919050565b61098881610973565b811461099357600080fd5b50565b6000815190506109a58161097f565b92915050565b6000602082840312156109c1576109c06105d7565b5b60006109cf84828501610996565b91505092915050565b600082825260208201905092915050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b6000610a1f6003836109d8565b9150610a2a826109e9565b602082019050919050565b60006020820190508181036000830152610a4e81610a12565b9050919050565b6000604082019050610a6a600083018561069b565b610a77602083018461063f565b9392505050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b6000610ab46002836109d8565b9150610abf82610a7e565b602082019050919050565b60006020820190508181036000830152610ae381610aa7565b905091905056fea264697066735822122043d4db6c7a566c7fd0a8558f2addaec841fb6dc460d754856b264115f34d2ea164736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80632ed5016f1461005c5780634aa4a4fc1461008c57806372f5d98a146100aa578063c31c9c07146100c8578063e0bab4c4146100e6575b600080fd5b61007660048036038101906100719190610612565b610104565b604051610083919061064e565b60405180910390f35b6100946102d0565b6040516100a191906106aa565b60405180910390f35b6100b26102e8565b6040516100bf91906106e3565b60405180910390f35b6100d06102ee565b6040516100dd919061075d565b60405180910390f35b6100ee610312565b6040516100fb91906106aa565b60405180910390f35b600061012673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc233308561032a565b61016573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc27f000000000000000000000000000000000000000000000000000000000000000084610482565b600060405180610100016040528073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016102859190610856565b6020604051808303816000875af11580156102a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c89190610887565b915050919050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b610bb881565b7f000000000000000000000000000000000000000000000000000000000000000081565b736b175474e89094c44da98b954eedeac495271d0f81565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401610361939291906108b4565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516103cb919061095c565b6000604051808303816000865af19150503d8060008114610408576040519150601f19603f3d011682016040523d82523d6000602084013e61040d565b606091505b509150915081801561043b575060008151148061043a57508080602001905181019061043991906109ab565b5b5b61047a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047190610a35565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016104b7929190610a55565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610521919061095c565b6000604051808303816000865af19150503d806000811461055e576040519150601f19603f3d011682016040523d82523d6000602084013e610563565b606091505b5091509150818015610591575060008151148061059057508080602001905181019061058f91906109ab565b5b5b6105d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c790610aca565b60405180910390fd5b5050505050565b600080fd5b6000819050919050565b6105ef816105dc565b81146105fa57600080fd5b50565b60008135905061060c816105e6565b92915050565b600060208284031215610628576106276105d7565b5b6000610636848285016105fd565b91505092915050565b610648816105dc565b82525050565b6000602082019050610663600083018461063f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061069482610669565b9050919050565b6106a481610689565b82525050565b60006020820190506106bf600083018461069b565b92915050565b600062ffffff82169050919050565b6106dd816106c5565b82525050565b60006020820190506106f860008301846106d4565b92915050565b6000819050919050565b600061072361071e61071984610669565b6106fe565b610669565b9050919050565b600061073582610708565b9050919050565b60006107478261072a565b9050919050565b6107578161073c565b82525050565b6000602082019050610772600083018461074e565b92915050565b61078181610689565b82525050565b610790816106c5565b82525050565b61079f816105dc565b82525050565b6107ae81610669565b82525050565b610100820160008201516107cb6000850182610778565b5060208201516107de6020850182610778565b5060408201516107f16040850182610787565b5060608201516108046060850182610778565b5060808201516108176080850182610796565b5060a082015161082a60a0850182610796565b5060c082015161083d60c0850182610796565b5060e082015161085060e08501826107a5565b50505050565b60006101008201905061086c60008301846107b4565b92915050565b600081519050610881816105e6565b92915050565b60006020828403121561089d5761089c6105d7565b5b60006108ab84828501610872565b91505092915050565b60006060820190506108c9600083018661069b565b6108d6602083018561069b565b6108e3604083018461063f565b949350505050565b600081519050919050565b600081905092915050565b60005b8381101561091f578082015181840152602081019050610904565b60008484015250505050565b6000610936826108eb565b61094081856108f6565b9350610950818560208601610901565b80840191505092915050565b6000610968828461092b565b915081905092915050565b60008115159050919050565b61098881610973565b811461099357600080fd5b50565b6000815190506109a58161097f565b92915050565b6000602082840312156109c1576109c06105d7565b5b60006109cf84828501610996565b91505092915050565b600082825260208201905092915050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b6000610a1f6003836109d8565b9150610a2a826109e9565b602082019050919050565b60006020820190508181036000830152610a4e81610a12565b9050919050565b6000604082019050610a6a600083018561069b565b610a77602083018461063f565b9392505050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b6000610ab46002836109d8565b9150610abf82610a7e565b602082019050919050565b60006020820190508181036000830152610ae381610aa7565b905091905056fea264697066735822122043d4db6c7a566c7fd0a8558f2addaec841fb6dc460d754856b264115f34d2ea164736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}