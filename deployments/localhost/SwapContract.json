{
  "address": "0xA3307BF348ACC4bEDdd67CCA2f7F0c4349d347Db",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "_swapRouter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTier",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "swapDAIForWETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "swapWETHForDAI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x66db8a438925359b981fb62e8adcdbb228ce9da56a7ca4bd66aec714a0e2d491",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xA3307BF348ACC4bEDdd67CCA2f7F0c4349d347Db",
    "transactionIndex": 0,
    "gasUsed": "782196",
    "logsBloom": "0x
    "blockHash": "0x1062c06798a8e6f4f3a0f11327f23d5862864f11b32b16c23d7388dbba48abf2",
    "transactionHash": "0x66db8a438925359b981fb62e8adcdbb228ce9da56a7ca4bd66aec714a0e2d491",
    "logs": [],
    "blockNumber": 15865268,
    "cumulativeGasUsed": "782196",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xE592427A0AEce92De3Edee1F18E0157C05861564"
  ],
  "numDeployments": 1,
  "solcInputHash": "cefc7e1f553de070d5a6588a3d50d6ab",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTier\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapDAIForWETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapWETHForDAI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapContract.sol\":\"SwapContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.6.0;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\nlibrary TransferHelper {\\n    /// @notice Transfers tokens from the targeted address to the given destination\\n    /// @notice Errors with 'STF' if transfer fails\\n    /// @param token The contract address of the token to be transferred\\n    /// @param from The originating address from which the tokens will be transferred\\n    /// @param to The destination address of the transfer\\n    /// @param value The amount to be transferred\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) =\\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\\n    }\\n\\n    /// @notice Transfers tokens from msg.sender to a recipient\\n    /// @dev Errors with ST if transfer fails\\n    /// @param token The contract address of the token which will be transferred\\n    /// @param to The recipient of the transfer\\n    /// @param value The value of the transfer\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\\n    }\\n\\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\\n    /// @dev Errors with 'SA' if transfer fails\\n    /// @param token The contract address of the token to be approved\\n    /// @param to The target of the approval\\n    /// @param value The amount of the given token the target will be allowed to spend\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\\n    }\\n\\n    /// @notice Transfers ETH to the recipient address\\n    /// @dev Fails with `STE`\\n    /// @param to The destination of the transfer\\n    /// @param value The value to be transferred\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, 'STE');\\n    }\\n}\\n\",\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\"},\"contracts/SwapContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\\n\\n/* amountOutMinimum: we are setting to zero, but this is a significant risk in production. For a real deployment, this value should be\\ncalculated using our SDK or an onchain price oracle - this helps protect against getting an unusually bad price for a trade due to a\\nfront running sandwich or another type of price manipulation */\\n\\n/* sqrtPriceLimitX96: We set this to zero - which makes this parameter inactive. In production, this value can be used to set the limit\\nfor the price the swap will push the pool to, which can help protect against price impact or for setting up logic in a variety of\\nprice-relevant mechanisms. */\\n\\ncontract SwapContract {\\n    ISwapRouter public immutable swapRouter;\\n    address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\\n    address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\n    uint24 public constant feeTier = 3000;\\n\\n    constructor(ISwapRouter _swapRouter) {\\n        swapRouter = _swapRouter;\\n    }\\n\\n    function swapWETHForDAI(uint amountIn) external returns (uint256 amountOut) {\\n        // Transfer the specified amount of WETH9 to this contract\\n        TransferHelper.safeTransferFrom(WETH9, msg.sender, address(this), amountIn);\\n\\n        // Approve the router to spend WETH9\\n        TransferHelper.safeApprove(WETH9, address(swapRouter), amountIn);\\n\\n        // Create the params that will be used to execute the swap\\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\\n            tokenIn: WETH9,\\n            tokenOut: DAI,\\n            fee: feeTier,\\n            recipient: msg.sender,\\n            deadline: block.timestamp,\\n            amountIn: amountIn,\\n            amountOutMinimum: 0,\\n            sqrtPriceLimitX96: 0\\n        });\\n\\n        // The call to `exactInputSingle` executes the swap\\n        amountOut = swapRouter.exactInputSingle(params);\\n\\n        return amountOut;\\n    }\\n\\n    function swapDAIForWETH(uint amountIn) external returns (uint256 amountOut) {\\n        // Transfer the specified amount of DAI to this contract\\n        TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountIn);\\n\\n        // Approve the router to spend DAI\\n        TransferHelper.safeApprove(DAI, address(swapRouter), amountIn);\\n\\n        // Create the params that will be used to execute the swap\\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\\n            tokenIn: DAI,\\n            tokenOut: WETH9,\\n            fee: feeTier,\\n            recipient: msg.sender,\\n            deadline: block.timestamp,\\n            amountIn: amountIn,\\n            amountOutMinimum: 0,\\n            sqrtPriceLimitX96: 0\\n        });\\n\\n        // The call to `exactInputSingle` executes the swap\\n        amountOut = swapRouter.exactInputSingle(params);\\n\\n        return amountOut;\\n    }\\n}\\n\",\"keccak256\":\"0x4fd02a04fee2bc5a2df30d63a2ac52448436dc63e2a7fb10a5db4cb3eb8f9444\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405162000e6f38038062000e6f833981810160405281019061003491906100e3565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050610110565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009e82610073565b9050919050565b60006100b082610093565b9050919050565b6100c0816100a5565b81146100cb57600080fd5b50565b6000815190506100dd816100b7565b92915050565b6000602082840312156100f9576100f861006e565b5b6000610107848285016100ce565b91505092915050565b608051610d27620001486000396000818161017b01528181610269015281816103470152818161043501526104f70152610d276000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806304ca7c0f146100675780632ed5016f146100975780634aa4a4fc146100c757806372f5d98a146100e5578063c31c9c0714610103578063e0bab4c414610121575b600080fd5b610081600480360381019061007c9190610819565b61013f565b60405161008e9190610855565b60405180910390f35b6100b160048036038101906100ac9190610819565b61030b565b6040516100be9190610855565b60405180910390f35b6100cf6104d7565b6040516100dc91906108b1565b60405180910390f35b6100ed6104ef565b6040516100fa91906108ea565b60405180910390f35b61010b6104f5565b6040516101189190610964565b60405180910390f35b610129610519565b60405161013691906108b1565b60405180910390f35b6000610161736b175474e89094c44da98b954eedeac495271d0f333085610531565b6101a0736b175474e89094c44da98b954eedeac495271d0f7f000000000000000000000000000000000000000000000000000000000000000084610689565b6000604051806101000160405280736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff16815260200173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016102c09190610a5d565b6020604051808303816000875af11580156102df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103039190610a8e565b915050919050565b600061032d73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2333085610531565b61036c73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc27f000000000000000000000000000000000000000000000000000000000000000084610689565b600060405180610100016040528073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b815260040161048c9190610a5d565b6020604051808303816000875af11580156104ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cf9190610a8e565b915050919050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b610bb881565b7f000000000000000000000000000000000000000000000000000000000000000081565b736b175474e89094c44da98b954eedeac495271d0f81565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b86868660405160240161056893929190610abb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105d29190610b63565b6000604051808303816000865af19150503d806000811461060f576040519150601f19603f3d011682016040523d82523d6000602084013e610614565b606091505b509150915081801561064257506000815114806106415750808060200190518101906106409190610bb2565b5b5b610681576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067890610c3c565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016106be929190610c5c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516107289190610b63565b6000604051808303816000865af19150503d8060008114610765576040519150601f19603f3d011682016040523d82523d6000602084013e61076a565b606091505b509150915081801561079857506000815114806107975750808060200190518101906107969190610bb2565b5b5b6107d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ce90610cd1565b60405180910390fd5b5050505050565b600080fd5b6000819050919050565b6107f6816107e3565b811461080157600080fd5b50565b600081359050610813816107ed565b92915050565b60006020828403121561082f5761082e6107de565b5b600061083d84828501610804565b91505092915050565b61084f816107e3565b82525050565b600060208201905061086a6000830184610846565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061089b82610870565b9050919050565b6108ab81610890565b82525050565b60006020820190506108c660008301846108a2565b92915050565b600062ffffff82169050919050565b6108e4816108cc565b82525050565b60006020820190506108ff60008301846108db565b92915050565b6000819050919050565b600061092a61092561092084610870565b610905565b610870565b9050919050565b600061093c8261090f565b9050919050565b600061094e82610931565b9050919050565b61095e81610943565b82525050565b60006020820190506109796000830184610955565b92915050565b61098881610890565b82525050565b610997816108cc565b82525050565b6109a6816107e3565b82525050565b6109b581610870565b82525050565b610100820160008201516109d2600085018261097f565b5060208201516109e5602085018261097f565b5060408201516109f8604085018261098e565b506060820151610a0b606085018261097f565b506080820151610a1e608085018261099d565b5060a0820151610a3160a085018261099d565b5060c0820151610a4460c085018261099d565b5060e0820151610a5760e08501826109ac565b50505050565b600061010082019050610a7360008301846109bb565b92915050565b600081519050610a88816107ed565b92915050565b600060208284031215610aa457610aa36107de565b5b6000610ab284828501610a79565b91505092915050565b6000606082019050610ad060008301866108a2565b610add60208301856108a2565b610aea6040830184610846565b949350505050565b600081519050919050565b600081905092915050565b60005b83811015610b26578082015181840152602081019050610b0b565b60008484015250505050565b6000610b3d82610af2565b610b478185610afd565b9350610b57818560208601610b08565b80840191505092915050565b6000610b6f8284610b32565b915081905092915050565b60008115159050919050565b610b8f81610b7a565b8114610b9a57600080fd5b50565b600081519050610bac81610b86565b92915050565b600060208284031215610bc857610bc76107de565b5b6000610bd684828501610b9d565b91505092915050565b600082825260208201905092915050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b6000610c26600383610bdf565b9150610c3182610bf0565b602082019050919050565b60006020820190508181036000830152610c5581610c19565b9050919050565b6000604082019050610c7160008301856108a2565b610c7e6020830184610846565b9392505050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b6000610cbb600283610bdf565b9150610cc682610c85565b602082019050919050565b60006020820190508181036000830152610cea81610cae565b905091905056fea26469706673582212201e30321b4663b43e29f4d049bc3a0d3e3511408e5288e1906dded403eb6c425964736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806304ca7c0f146100675780632ed5016f146100975780634aa4a4fc146100c757806372f5d98a146100e5578063c31c9c0714610103578063e0bab4c414610121575b600080fd5b610081600480360381019061007c9190610819565b61013f565b60405161008e9190610855565b60405180910390f35b6100b160048036038101906100ac9190610819565b61030b565b6040516100be9190610855565b60405180910390f35b6100cf6104d7565b6040516100dc91906108b1565b60405180910390f35b6100ed6104ef565b6040516100fa91906108ea565b60405180910390f35b61010b6104f5565b6040516101189190610964565b60405180910390f35b610129610519565b60405161013691906108b1565b60405180910390f35b6000610161736b175474e89094c44da98b954eedeac495271d0f333085610531565b6101a0736b175474e89094c44da98b954eedeac495271d0f7f000000000000000000000000000000000000000000000000000000000000000084610689565b6000604051806101000160405280736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff16815260200173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016102c09190610a5d565b6020604051808303816000875af11580156102df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103039190610a8e565b915050919050565b600061032d73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2333085610531565b61036c73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc27f000000000000000000000000000000000000000000000000000000000000000084610689565b600060405180610100016040528073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b815260040161048c9190610a5d565b6020604051808303816000875af11580156104ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cf9190610a8e565b915050919050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b610bb881565b7f000000000000000000000000000000000000000000000000000000000000000081565b736b175474e89094c44da98b954eedeac495271d0f81565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b86868660405160240161056893929190610abb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105d29190610b63565b6000604051808303816000865af19150503d806000811461060f576040519150601f19603f3d011682016040523d82523d6000602084013e610614565b606091505b509150915081801561064257506000815114806106415750808060200190518101906106409190610bb2565b5b5b610681576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067890610c3c565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016106be929190610c5c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516107289190610b63565b6000604051808303816000865af19150503d8060008114610765576040519150601f19603f3d011682016040523d82523d6000602084013e61076a565b606091505b509150915081801561079857506000815114806107975750808060200190518101906107969190610bb2565b5b5b6107d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ce90610cd1565b60405180910390fd5b5050505050565b600080fd5b6000819050919050565b6107f6816107e3565b811461080157600080fd5b50565b600081359050610813816107ed565b92915050565b60006020828403121561082f5761082e6107de565b5b600061083d84828501610804565b91505092915050565b61084f816107e3565b82525050565b600060208201905061086a6000830184610846565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061089b82610870565b9050919050565b6108ab81610890565b82525050565b60006020820190506108c660008301846108a2565b92915050565b600062ffffff82169050919050565b6108e4816108cc565b82525050565b60006020820190506108ff60008301846108db565b92915050565b6000819050919050565b600061092a61092561092084610870565b610905565b610870565b9050919050565b600061093c8261090f565b9050919050565b600061094e82610931565b9050919050565b61095e81610943565b82525050565b60006020820190506109796000830184610955565b92915050565b61098881610890565b82525050565b610997816108cc565b82525050565b6109a6816107e3565b82525050565b6109b581610870565b82525050565b610100820160008201516109d2600085018261097f565b5060208201516109e5602085018261097f565b5060408201516109f8604085018261098e565b506060820151610a0b606085018261097f565b506080820151610a1e608085018261099d565b5060a0820151610a3160a085018261099d565b5060c0820151610a4460c085018261099d565b5060e0820151610a5760e08501826109ac565b50505050565b600061010082019050610a7360008301846109bb565b92915050565b600081519050610a88816107ed565b92915050565b600060208284031215610aa457610aa36107de565b5b6000610ab284828501610a79565b91505092915050565b6000606082019050610ad060008301866108a2565b610add60208301856108a2565b610aea6040830184610846565b949350505050565b600081519050919050565b600081905092915050565b60005b83811015610b26578082015181840152602081019050610b0b565b60008484015250505050565b6000610b3d82610af2565b610b478185610afd565b9350610b57818560208601610b08565b80840191505092915050565b6000610b6f8284610b32565b915081905092915050565b60008115159050919050565b610b8f81610b7a565b8114610b9a57600080fd5b50565b600081519050610bac81610b86565b92915050565b600060208284031215610bc857610bc76107de565b5b6000610bd684828501610b9d565b91505092915050565b600082825260208201905092915050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b6000610c26600383610bdf565b9150610c3182610bf0565b602082019050919050565b60006020820190508181036000830152610c5581610c19565b9050919050565b6000604082019050610c7160008301856108a2565b610c7e6020830184610846565b9392505050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b6000610cbb600283610bdf565b9150610cc682610c85565b602082019050919050565b60006020820190508181036000830152610cea81610cae565b905091905056fea26469706673582212201e30321b4663b43e29f4d049bc3a0d3e3511408e5288e1906dded403eb6c425964736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}